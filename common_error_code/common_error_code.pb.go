// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.19.3
// source: common_error_code.proto

//default go package name

package common_error_code

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_ERR_SUCCESS ErrorCode = 0
	ErrorCode_ERR_UNKNOWN ErrorCode = 10
	// 后端部分应用，10000 - 19999
	// redis 10000 - 10099
	ErrorCode_ERR_REDIS           ErrorCode = 10001
	ErrorCode_ERR_REDIS_CANT_FIND ErrorCode = 10002
	// 提供的信息错误：10100 - 10199
	// 不存在的Email、手机号、userID
	ErrorCode_ERR_RESOURCE_NOT_AVAILABLE ErrorCode = 10100
	// 账号密码不匹配
	ErrorCode_ERR_PASSWORD_INVALID ErrorCode = 10101
	// UserID已被占用
	ErrorCode_ERR_USERID_EXIST ErrorCode = 10102
	// 传递的参数不合法
	ErrorCode_ERR_PARAMETER_INCOMPLETE ErrorCode = 10103
	// 传递过来的密码无法经过私钥解密
	ErrorCode_ERR_PARAMETER_HASHED_PASSWORD_INVALID ErrorCode = 10104
	// 找不到用户数据
	ErrorCode_ERR_FIND_USER ErrorCode = 10105
	// Vcode 10200-10299
	// VCode不存在
	ErrorCode_ERR_VCODE_NON_EXIST ErrorCode = 10200
	// VCode存在但是不属于Email
	ErrorCode_ERR_VCODE_INVALID_OWNER ErrorCode = 10201
	// Token 10300-10399
	// Token 不存在
	ErrorCode_ERR_TOKEN_RESET_PWD_NON_EXIST ErrorCode = 10300
	// Session id 10400-10499
	// 生成session id失败
	ErrorCode_ERR_GENERATE_SESSION_ID ErrorCode = 10400
	// 内部错误，比如说服务器、网络连接。被调用方的错误
	ErrorCode_ERR_INTERNAL_FAILURE ErrorCode = 19000
	ErrorCode_ERR_OPERATION_FAILED ErrorCode = 19001
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:     "ERR_SUCCESS",
		10:    "ERR_UNKNOWN",
		10001: "ERR_REDIS",
		10002: "ERR_REDIS_CANT_FIND",
		10100: "ERR_RESOURCE_NOT_AVAILABLE",
		10101: "ERR_PASSWORD_INVALID",
		10102: "ERR_USERID_EXIST",
		10103: "ERR_PARAMETER_INCOMPLETE",
		10104: "ERR_PARAMETER_HASHED_PASSWORD_INVALID",
		10105: "ERR_FIND_USER",
		10200: "ERR_VCODE_NON_EXIST",
		10201: "ERR_VCODE_INVALID_OWNER",
		10300: "ERR_TOKEN_RESET_PWD_NON_EXIST",
		10400: "ERR_GENERATE_SESSION_ID",
		19000: "ERR_INTERNAL_FAILURE",
		19001: "ERR_OPERATION_FAILED",
	}
	ErrorCode_value = map[string]int32{
		"ERR_SUCCESS":                           0,
		"ERR_UNKNOWN":                           10,
		"ERR_REDIS":                             10001,
		"ERR_REDIS_CANT_FIND":                   10002,
		"ERR_RESOURCE_NOT_AVAILABLE":            10100,
		"ERR_PASSWORD_INVALID":                  10101,
		"ERR_USERID_EXIST":                      10102,
		"ERR_PARAMETER_INCOMPLETE":              10103,
		"ERR_PARAMETER_HASHED_PASSWORD_INVALID": 10104,
		"ERR_FIND_USER":                         10105,
		"ERR_VCODE_NON_EXIST":                   10200,
		"ERR_VCODE_INVALID_OWNER":               10201,
		"ERR_TOKEN_RESET_PWD_NON_EXIST":         10300,
		"ERR_GENERATE_SESSION_ID":               10400,
		"ERR_INTERNAL_FAILURE":                  19000,
		"ERR_OPERATION_FAILED":                  19001,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_error_code_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_common_error_code_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_common_error_code_proto_rawDescGZIP(), []int{0}
}

var File_common_error_code_proto protoreflect.FileDescriptor

var file_common_error_code_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x2a, 0xbb, 0x03, 0x0a,
	0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x52,
	0x52, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x45,
	0x52, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x0a, 0x12, 0x0e, 0x0a, 0x09,
	0x45, 0x52, 0x52, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x53, 0x10, 0x91, 0x4e, 0x12, 0x18, 0x0a, 0x13,
	0x45, 0x52, 0x52, 0x5f, 0x52, 0x45, 0x44, 0x49, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x54, 0x5f, 0x46,
	0x49, 0x4e, 0x44, 0x10, 0x92, 0x4e, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x5f, 0x52, 0x45,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56, 0x41, 0x49, 0x4c,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0xf4, 0x4e, 0x12, 0x19, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x5f, 0x50,
	0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10,
	0xf5, 0x4e, 0x12, 0x15, 0x0a, 0x10, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x49, 0x44,
	0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10, 0xf6, 0x4e, 0x12, 0x1d, 0x0a, 0x18, 0x45, 0x52, 0x52,
	0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x4d,
	0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0xf7, 0x4e, 0x12, 0x2a, 0x0a, 0x25, 0x45, 0x52, 0x52, 0x5f,
	0x50, 0x41, 0x52, 0x41, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x5f, 0x48, 0x41, 0x53, 0x48, 0x45, 0x44,
	0x5f, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x10, 0xf8, 0x4e, 0x12, 0x12, 0x0a, 0x0d, 0x45, 0x52, 0x52, 0x5f, 0x46, 0x49, 0x4e, 0x44,
	0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0xf9, 0x4e, 0x12, 0x18, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x5f,
	0x56, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x10,
	0xd8, 0x4f, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x5f, 0x56, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x10, 0xd9, 0x4f,
	0x12, 0x22, 0x0a, 0x1d, 0x45, 0x52, 0x52, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x52, 0x45,
	0x53, 0x45, 0x54, 0x5f, 0x50, 0x57, 0x44, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x45, 0x58, 0x49, 0x53,
	0x54, 0x10, 0xbc, 0x50, 0x12, 0x1c, 0x0a, 0x17, 0x45, 0x52, 0x52, 0x5f, 0x47, 0x45, 0x4e, 0x45,
	0x52, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x10,
	0xa0, 0x51, 0x12, 0x1a, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x55, 0x52, 0x45, 0x10, 0xb8, 0x94, 0x01, 0x12, 0x1a,
	0x0a, 0x14, 0x45, 0x52, 0x52, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xb9, 0x94, 0x01, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x54,
	0x72, 0x65, 0x65, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_error_code_proto_rawDescOnce sync.Once
	file_common_error_code_proto_rawDescData = file_common_error_code_proto_rawDesc
)

func file_common_error_code_proto_rawDescGZIP() []byte {
	file_common_error_code_proto_rawDescOnce.Do(func() {
		file_common_error_code_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_error_code_proto_rawDescData)
	})
	return file_common_error_code_proto_rawDescData
}

var file_common_error_code_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_common_error_code_proto_goTypes = []interface{}{
	(ErrorCode)(0), // 0: common_error_code.ErrorCode
}
var file_common_error_code_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_common_error_code_proto_init() }
func file_common_error_code_proto_init() {
	if File_common_error_code_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_error_code_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_error_code_proto_goTypes,
		DependencyIndexes: file_common_error_code_proto_depIdxs,
		EnumInfos:         file_common_error_code_proto_enumTypes,
	}.Build()
	File_common_error_code_proto = out.File
	file_common_error_code_proto_rawDesc = nil
	file_common_error_code_proto_goTypes = nil
	file_common_error_code_proto_depIdxs = nil
}
