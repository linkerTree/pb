syntax = "proto3";
//default go package name
package credential;
option  go_package = "github.com/linkerTree/pb/credential";

service UserCredentialValidator {
  // 尝试登陆的时候来验证密码是否正确
  rpc LoginByUserId(LoginByUserIdReq) returns (LoginByUserIdRsp);
  // 根据session ID检查登陆状态
  rpc CheckIsLoggingIn(CheckIsLoggingInReq) returns (CheckIsLoggingInRsp);
  // RegisterUser 用户注册
  rpc RegisterUser(RegisterUserReq) returns (RegisterUserRsp);
}

message LoginByUserIdReq {
  string userId = 1;
  string password = 2;
}
message LoginByUserIdRsp {
  string sessionId = 1;
}

message CheckIsLoggingInReq {
  string sessionId = 1;
}
message CheckIsLoggingInRsp {
  string userId = 1;
}

message RegisterUserReq {
  string userId = 1;
  string password = 2;
  string email = 3;
  string mobile = 4;
}
message RegisterUserRsp {
  string sessionId = 1;
}

service UserPasswordRetriever {
  // 需求通过email发送验证码
  rpc GetVcodeWithEmail(GetVcodeWithEmailReq) returns (GetVcodeWithEmailRsp);
  // 检查验证码是否正确
  rpc ValidateEmailCode(ValidateEmailCodeReq) returns(ValidateEmailCodeRsp);
  // 通过mobile发送验证码
  rpc GetVcodeWithMobile(GetVcodeWithMobileReq) returns (GetVcodeWithMobileRsp);
  // 检查验证码是否正确
  rpc ValidateMobileCode(ValidateMobileCodeReq) returns(ValidateMobileCodeRsp);

  // 验证码正确的情况下，重置密码
  rpc ResetPasswordWithToken(ResetPasswordWithTokenReq) returns(ResetPasswordWithTokenRsp);
}

message GetVcodeWithEmailReq {
  string Email = 1;
}

message GetVcodeWithEmailRsp {}

message ValidateEmailCodeReq {
  string Email = 1;
  string Code = 2;
}
message ValidateEmailCodeRsp {
  string ResetPwdToken = 1;
}

message GetVcodeWithMobileReq {
  string mobile = 1;
}
message GetVcodeWithMobileRsp {
}

message ValidateMobileCodeReq {
  string Mobile = 1;
  string Code = 2;
}

message ValidateMobileCodeRsp {
  string ResetPwdToken = 1;
}

message ResetPasswordWithTokenReq {
  string ResetPwdToken = 1;
  string password = 2;
}

message ResetPasswordWithTokenRsp {
  string sessionId = 1;
  string UserID = 2;
}

