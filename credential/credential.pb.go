// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: credential.proto

//default go package name

package credential

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetPublicKeyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetPublicKeyReq) Reset() {
	*x = GetPublicKeyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credential_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicKeyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeyReq) ProtoMessage() {}

func (x *GetPublicKeyReq) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeyReq.ProtoReflect.Descriptor instead.
func (*GetPublicKeyReq) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{0}
}

type GetPublicKeyRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublicKey string `protobuf:"bytes,1,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
}

func (x *GetPublicKeyRsp) Reset() {
	*x = GetPublicKeyRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credential_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPublicKeyRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPublicKeyRsp) ProtoMessage() {}

func (x *GetPublicKeyRsp) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPublicKeyRsp.ProtoReflect.Descriptor instead.
func (*GetPublicKeyRsp) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{1}
}

func (x *GetPublicKeyRsp) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type ValidatePassWordReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName       string `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	HashedPassword string `protobuf:"bytes,2,opt,name=hashedPassword,proto3" json:"hashedPassword,omitempty"`
}

func (x *ValidatePassWordReq) Reset() {
	*x = ValidatePassWordReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credential_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePassWordReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePassWordReq) ProtoMessage() {}

func (x *ValidatePassWordReq) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePassWordReq.ProtoReflect.Descriptor instead.
func (*ValidatePassWordReq) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{2}
}

func (x *ValidatePassWordReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *ValidatePassWordReq) GetHashedPassword() string {
	if x != nil {
		return x.HashedPassword
	}
	return ""
}

type ValidatePassWordRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error     string `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	SessionID string `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *ValidatePassWordRsp) Reset() {
	*x = ValidatePassWordRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credential_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ValidatePassWordRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ValidatePassWordRsp) ProtoMessage() {}

func (x *ValidatePassWordRsp) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ValidatePassWordRsp.ProtoReflect.Descriptor instead.
func (*ValidatePassWordRsp) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{3}
}

func (x *ValidatePassWordRsp) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *ValidatePassWordRsp) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type CheckIsLoggingInReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionID string `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
}

func (x *CheckIsLoggingInReq) Reset() {
	*x = CheckIsLoggingInReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credential_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIsLoggingInReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIsLoggingInReq) ProtoMessage() {}

func (x *CheckIsLoggingInReq) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIsLoggingInReq.ProtoReflect.Descriptor instead.
func (*CheckIsLoggingInReq) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{4}
}

func (x *CheckIsLoggingInReq) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type CheckIsLoggingInRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLogging bool `protobuf:"varint,1,opt,name=isLogging,proto3" json:"isLogging,omitempty"`
}

func (x *CheckIsLoggingInRsp) Reset() {
	*x = CheckIsLoggingInRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_credential_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckIsLoggingInRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckIsLoggingInRsp) ProtoMessage() {}

func (x *CheckIsLoggingInRsp) ProtoReflect() protoreflect.Message {
	mi := &file_credential_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckIsLoggingInRsp.ProtoReflect.Descriptor instead.
func (*CheckIsLoggingInRsp) Descriptor() ([]byte, []int) {
	return file_credential_proto_rawDescGZIP(), []int{5}
}

func (x *CheckIsLoggingInRsp) GetIsLogging() bool {
	if x != nil {
		return x.IsLogging
	}
	return false
}

var File_credential_proto protoreflect.FileDescriptor

var file_credential_proto_rawDesc = []byte{
	0x0a, 0x10, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0a, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x22, 0x11,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65,
	0x71, 0x22, 0x2f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x52, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x22, 0x59, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61,
	0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x68, 0x65, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68,
	0x61, 0x73, 0x68, 0x65, 0x64, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x49, 0x0a,
	0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72,
	0x64, 0x52, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x33, 0x0a, 0x13, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x22, 0x33, 0x0a,
	0x13, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x52, 0x73, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69,
	0x6e, 0x67, 0x32, 0x8f, 0x02, 0x0a, 0x17, 0x55, 0x73, 0x65, 0x72, 0x43, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x48,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x1b,
	0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x4b, 0x65, 0x79, 0x52, 0x73, 0x70, 0x12, 0x54, 0x0a, 0x10, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x2e, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e,
	0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x50, 0x61, 0x73, 0x73, 0x57, 0x6f, 0x72, 0x64, 0x52, 0x73, 0x70, 0x12, 0x54,
	0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x49, 0x6e, 0x12, 0x1f, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49, 0x6e,
	0x52, 0x65, 0x71, 0x1a, 0x1f, 0x2e, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49,
	0x6e, 0x52, 0x73, 0x70, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x54, 0x72, 0x65, 0x65, 0x2f, 0x70, 0x62,
	0x2f, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_credential_proto_rawDescOnce sync.Once
	file_credential_proto_rawDescData = file_credential_proto_rawDesc
)

func file_credential_proto_rawDescGZIP() []byte {
	file_credential_proto_rawDescOnce.Do(func() {
		file_credential_proto_rawDescData = protoimpl.X.CompressGZIP(file_credential_proto_rawDescData)
	})
	return file_credential_proto_rawDescData
}

var file_credential_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_credential_proto_goTypes = []interface{}{
	(*GetPublicKeyReq)(nil),     // 0: credential.GetPublicKeyReq
	(*GetPublicKeyRsp)(nil),     // 1: credential.GetPublicKeyRsp
	(*ValidatePassWordReq)(nil), // 2: credential.validatePassWordReq
	(*ValidatePassWordRsp)(nil), // 3: credential.validatePassWordRsp
	(*CheckIsLoggingInReq)(nil), // 4: credential.CheckIsLoggingInReq
	(*CheckIsLoggingInRsp)(nil), // 5: credential.CheckIsLoggingInRsp
}
var file_credential_proto_depIdxs = []int32{
	0, // 0: credential.UserCredentialValidator.GetPublicKey:input_type -> credential.GetPublicKeyReq
	2, // 1: credential.UserCredentialValidator.ValidatePassWord:input_type -> credential.validatePassWordReq
	4, // 2: credential.UserCredentialValidator.CheckIsLoggingIn:input_type -> credential.CheckIsLoggingInReq
	1, // 3: credential.UserCredentialValidator.GetPublicKey:output_type -> credential.GetPublicKeyRsp
	3, // 4: credential.UserCredentialValidator.ValidatePassWord:output_type -> credential.validatePassWordRsp
	5, // 5: credential.UserCredentialValidator.CheckIsLoggingIn:output_type -> credential.CheckIsLoggingInRsp
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_credential_proto_init() }
func file_credential_proto_init() {
	if File_credential_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_credential_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicKeyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credential_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPublicKeyRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credential_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePassWordReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credential_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ValidatePassWordRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credential_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIsLoggingInReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_credential_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckIsLoggingInRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_credential_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_credential_proto_goTypes,
		DependencyIndexes: file_credential_proto_depIdxs,
		MessageInfos:      file_credential_proto_msgTypes,
	}.Build()
	File_credential_proto = out.File
	file_credential_proto_rawDesc = nil
	file_credential_proto_goTypes = nil
	file_credential_proto_depIdxs = nil
}
